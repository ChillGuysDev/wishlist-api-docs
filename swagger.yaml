components:
  schemas:
    APIError:
      properties:
        details:
          $ref: '#/components/schemas/Details'
        message:
          type: string
      required:
      - message
      type: object
    CreateDraftWishRequest:
      properties:
        description:
          type: string
        image_url:
          type: string
        name:
          type: string
        price:
          type: integer
        url:
          type: string
      required:
      - url
      type: object
    CreateFriendRequest:
      properties:
        receiver_id:
          type: integer
      required:
      - receiver_id
      type: object
    CreateWishlistItemRequest:
      properties:
        description:
          type: string
        name:
          type: string
      required:
      - name
      type: object
    CreateWishlistRequest:
      properties:
        description:
          type: string
        name:
          type: string
      required:
      - name
      type: object
    Details:
      additionalProperties:
        type: string
      type: object
    DraftWish:
      properties:
        created_at:
          type: string
        description:
          type: string
        id:
          type: integer
        image_url:
          type: string
        name:
          type: string
        price:
          type: integer
        url:
          type: string
        user_id:
          type: integer
      required:
      - id
      - url
      - user_id
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/APIError'
      required:
      - error
      type: object
    FriendRequest:
      properties:
        created_at:
          type: string
        id:
          type: integer
        receiver_id:
          type: integer
        sender_id:
          type: integer
        status:
          $ref: '#/components/schemas/friend.RequestStatus'
        updated_at:
          type: string
      required:
      - created_at
      - id
      - receiver_id
      - sender_id
      - status
      - updated_at
      type: object
    InviteRequest:
      properties:
        user_ids:
          items:
            type: integer
          type: array
          uniqueItems: false
      type: object
    ItemPhoto:
      properties:
        url:
          type: string
      type: object
    LoginRequest:
      properties:
        password:
          type: string
        username:
          type: string
      required:
      - password
      - username
      type: object
    Page-DraftWish:
      properties:
        data:
          items:
            $ref: '#/components/schemas/DraftWish'
          type: array
          uniqueItems: false
        has_more:
          type: boolean
        next_cursor:
          type: string
      type: object
    Page-UserFriend:
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserFriend'
          type: array
          uniqueItems: false
        has_more:
          type: boolean
        next_cursor:
          type: string
      type: object
    Page-Wishlist:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Wishlist'
          type: array
          uniqueItems: false
        has_more:
          type: boolean
        next_cursor:
          type: string
      type: object
    RegisterRequest:
      properties:
        bio:
          type: string
        birth_date:
          format: "2006-01-02"
          type: string
        email:
          type: string
        name:
          type: string
        password:
          type: string
        username:
          type: string
      required:
      - password
      - username
      type: object
    RegisterResponse:
      properties:
        tokens:
          $ref: '#/components/schemas/TokenPair'
        user:
          $ref: '#/components/schemas/UserProfile'
      required:
      - tokens
      - user
      type: object
    RemoveReservationMembersRequest:
      properties:
        user_ids:
          items:
            type: integer
          type: array
          uniqueItems: false
      type: object
    Reservation:
      properties:
        id:
          type: integer
        item_id:
          type: integer
        members:
          items:
            $ref: '#/components/schemas/UserProfile'
          type: array
          uniqueItems: false
        reserved_by:
          type: integer
        wishlist_id:
          type: integer
      required:
      - id
      - item_id
      - reserved_by
      - wishlist_id
      type: object
    ReservationInvite:
      properties:
        id:
          type: integer
        invited_at:
          type: string
        invited_user:
          $ref: '#/components/schemas/UserProfile'
        item_id:
          type: integer
        reservation_id:
          type: integer
        reserved_by:
          type: integer
        status:
          $ref: '#/components/schemas/reservation.InviteStatus'
        wishlist_id:
          type: integer
      type: object
    TokenPair:
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
      required:
      - access_token
      - refresh_token
      type: object
    UpdateItemPhotoRequest:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    UpdateUserAvatarRequest:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    UpdateWishlistItemRequest:
      properties:
        description:
          type: string
        name:
          type: string
      required:
      - name
      type: object
    UpdateWishlistRequest:
      properties:
        description:
          type: string
        name:
          type: string
      required:
      - name
      type: object
    UserAvatarResponse:
      properties:
        path:
          type: string
      required:
      - path
      type: object
    UserFriend:
      properties:
        id:
          type: integer
        username:
          type: string
      required:
      - id
      - username
      type: object
    UserProfile:
      properties:
        avatar_url:
          type: string
        bio:
          type: string
        birth_date:
          format: "2006-01-02"
          type: string
        email:
          type: string
        id:
          type: integer
        name:
          type: string
        username:
          type: string
      required:
      - id
      - username
      type: object
    Wishlist:
      properties:
        created_at:
          type: string
        description:
          type: string
        id:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/WishlistItem'
          type: array
          uniqueItems: false
        name:
          type: string
        owner_id:
          type: integer
      required:
      - created_at
      - id
      - name
      - owner_id
      type: object
    WishlistItem:
      properties:
        created_at:
          type: string
        description:
          type: string
        id:
          type: integer
        image_url:
          type: string
        name:
          type: string
        price:
          type: integer
        url:
          type: string
      required:
      - created_at
      - id
      - name
      type: object
    friend.RequestStatus:
      enum:
      - pending
      - accepted
      - declined
      type: string
      x-enum-varnames:
      - RequestStatusPending
      - RequestStatusAccepted
      - RequestStatusDeclined
    reservation.InviteStatus:
      enum:
      - pending
      - accepted
      - declined
      type: string
      x-enum-varnames:
      - InviteStatusPending
      - InviteStatusAccepted
      - InviteStatusDeclined
  securitySchemes:
    bearerauth:
      bearerFormat: JWT
      scheme: bearer
      type: http
externalDocs:
  description: ""
  url: ""
info:
  title: Wishlist Server API
  version: ""
openapi: 3.1.0
paths:
  /auth/login:
    post:
      description: Аутентификация пользователя с использованием логина и пароля. Возвращает
        пару токенов доступа и обновления.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        description: Данные для входа
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
          description: Успешная аутентификация. Возвращается пара токенов
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверное тело запроса (например, невалидный JSON)
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный логин или пароль
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь с указанным логином не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      summary: Вход пользователя
      tags:
      - auth
  /auth/logout:
    post:
      description: Инвалидирует refresh токен пользователя, делая его непригодным
        для последующего использования.
      operationId: logout
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Токен инвалидирован
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Отсутствует или недействительный токен
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Выход пользователя и аннулирование refresh токена
      tags:
      - auth
  /auth/refresh:
    post:
      description: Обновляет пару токенов на основе предоставленного refresh токена.
        Access токен не требуется.
      operationId: refresh
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
          description: Успешное обновление токенов
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Недействительный или просроченный refresh токен
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Обновить пару токенов
      tags:
      - auth
  /auth/register:
    post:
      description: Создает нового пользователя в системе. Требуется уникальное имя
        пользователя и валидный email.
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        description: Данные для регистрации нового пользователя
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
          description: Пользователь успешно зарегистрирован
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный формат запроса (например, невалидный JSON)
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь с таким username или email уже существует
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Ошибка валидации входных данных (например, короткий пароль)
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      summary: Регистрация нового пользователя
      tags:
      - auth
  /draft-wishes:
    delete:
      operationId: deleteDraftWishes
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Виш удален
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Нет прав на выполнение операции
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Удалить все черновые вишы
      tags:
      - draft_wishes
    get:
      operationId: getDraftWishes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page-DraftWish'
          description: Список черновых вишей пользователя
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Получить список черновых вишей
      tags:
      - draft_wishes
    post:
      operationId: createDraftWish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDraftWishRequest'
        description: Запрос создания чернового виша
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftWish'
          description: Виш создан
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Создать черновой виш
      tags:
      - draft_wishes
  /draft-wishes/{wish_id}:
    delete:
      operationId: deleteDraftWish
      parameters:
      - description: ID чернового виша
        in: path
        name: wish_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Виш удален
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Нет прав на выполнение операции
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Виш не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Удалить черновой виш
      tags:
      - draft_wishes
  /draft-wishes/{wish_id}/move/{wishlist_id}:
    post:
      operationId: moveDraftWish
      parameters:
      - description: ID чернового виша
        in: path
        name: wish_id
        required: true
        schema:
          type: integer
      - description: ID вишлиста
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WishlistItem'
          description: Предмет добавлен в вишлист
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Нет прав на выполнение операции
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Вишлист не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Перенести черновой виш в вишлист
      tags:
      - draft_wishes
  /friends:
    get:
      description: Возвращает список пользователей, которые являются друзьями текущего
        пользователя. Результат может быть пагинирован.
      operationId: getFriends
      parameters:
      - description: Номер страницы, по умолчанию 1
        in: query
        name: page
        schema:
          type: integer
      - description: Количество друзей на странице, по умолчанию 20
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page-UserFriend'
          description: Пагинированный список друзей
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован — требуется валидный токен
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Получить список друзей текущего пользователя
      tags:
      - friends
  /friends/{friend_id}:
    delete:
      description: Удаляет указанного пользователя из списка друзей текущего пользователя.
      operationId: removeFriend
      parameters:
      - description: ID пользователя, которого нужно удалить из друзей
        in: path
        name: friend_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Пользователь успешно удалён из списка друзей
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован — требуется валидный токен
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не найден в списке друзей
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Удалить пользователя из списка друзей
      tags:
      - friends
  /friends/requests:
    post:
      operationId: createFriendRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFriendRequest'
        description: Данные запроса дружбы (ID получателя и т.п.)
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: Запрос дружбы успешно создан
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный формат запроса или отсутствуют обязательные поля
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не авторизован
        "409":
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorResponse'
                - $ref: '#/components/schemas/ErrorResponse'
          description: Запрос дружбы уже был отклонен и не может быть повторно отправлен
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Создание запроса дружбы от текущего пользователя другому
      tags:
      - friends
  /friends/requests/{request_id}:
    delete:
      operationId: cancelFriendRequest
      parameters:
      - description: ID запроса на дружбу
        in: path
        name: request_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: ""
          description: Запрос на дружбу успешно удалён
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Некорректный ID запроса или неверный формат запроса
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не авторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Нельзя отменить запрос, созданный другим пользователем
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Запрос на дружбу с данным ID не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Отменить запрос на добавление в друзья
      tags:
      - friends
  /friends/requests/{request_id}/accept:
    post:
      operationId: acceptFriendRequest
      parameters:
      - description: ID запроса на дружбу
        in: path
        name: request_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: ""
          description: Запрос на дружбу успешно принят
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Некорректный ID запроса или неверный формат запроса
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не авторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Нельзя принять собственный запрос на дружбу
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Запрос на дружбу с данным ID не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Принять запрос на добавление в друзья
      tags:
      - friends
  /friends/requests/{request_id}/decline:
    post:
      operationId: declineFriendRequest
      parameters:
      - description: ID запроса на дружбу
        in: path
        name: request_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: ""
          description: Запрос на дружбу успешно отклонен
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Некорректный ID запроса или неверный формат запроса
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не авторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Нельзя отклонить собственный запрос на дружбу
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Запрос на дружбу с данным ID не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Отклонить запрос на добавление в друзья
      tags:
      - friends
  /friends/requests/incoming:
    get:
      description: Возвращает все запросы дружбы, которые были отправлены текущему
        пользователю и ожидают его ответа.
      operationId: getIncomingFriendRequests
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FriendRequest'
                type: array
          description: Список входящих запросов дружбы
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован — отсутствует или неверный токен авторизации
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Получить список входящих запросов дружбы текущего пользователя
      tags:
      - friends
  /friends/requests/outgoing:
    get:
      description: Возвращает все запросы дружбы, которые текущий пользователь отправил
        другим пользователям и которые ещё не были подтверждены или отклонены.
      operationId: getOutgoingFriendRequests
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FriendRequest'
                type: array
          description: Список исходящих запросов дружбы
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован — отсутствует или неверный токен авторизации
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Получить список исходящих запросов дружбы текущего пользователя
      tags:
      - friends
  /me:
    get:
      description: Возвращает информацию профиля текущего авторизованного пользователя,
        включая имя, аватар и статус.
      operationId: getCurrentUserProfile
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: Профиль пользователя успешно получен
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неавторизованный доступ
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Получить профиль текущего пользователя
      tags:
      - users
  /me/avatar:
    delete:
      description: Удаляет текущий аватар пользователя, если он установлен.
      operationId: deleteUserAvatar
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Аватар пользователя успешно удалён
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Удалить аватар пользователя
      tags:
      - users
    post:
      description: Загружает новый аватар текущего пользователя. Старый аватар (если
        есть) будет заменён.
      operationId: updateUserAvatar
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUserAvatarRequest'
        description: Аватар пользователя (JPEG, PNG)
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAvatarResponse'
          description: Аватар успешно обновлён
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный формат файла или превышен размер
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Обновить аватар пользователя
      tags:
      - users
  /reservations:
    get:
      description: Возвращает все активные бронирования, сделанные текущим авторизованным
        пользователем.
      operationId: getUserReservations
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Reservation'
                type: array
          description: Список бронирований пользователя
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос — например, неверные параметры
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован — требуется действующий токен авторизации
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Получить список бронирований для текущего пользователя
      tags:
      - reservations
  /reservations/{reservation_id}:
    delete:
      description: Отменяет бронирование, если текущий пользователь является его автором,
        или позволяет пользователю выйти из бронирования, если он не автор.
      operationId: cancelReservation
      parameters:
      - description: ID бронирования
        in: path
        name: reservation_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: ""
          description: Бронирование успешно отменено или пользователь вышел из бронирования
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос (например, неверный ID)
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не авторизован
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Бронирование не найдено
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Отменить бронирование или выйти из брони
      tags:
      - reservations
  /reservations/{reservation_id}/users:
    delete:
      operationId: removeMembersFromReservation
      parameters:
      - description: ID бронирования
        in: path
        name: reservation_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveReservationMembersRequest'
        description: Запрос на удаление пользователей
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: ""
          description: Участники успешно удалены
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Бронирование не найдено
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Удалить приглашённых участников из бронирования. Доступно только автору
        брони. Автор брони не может удалить себя.
      tags:
      - reservations
    get:
      operationId: getReservationUsers
      parameters:
      - description: Уникальный идентификатор брони
        in: path
        name: reservation_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserProfile'
                type: array
          description: Массив профилей пользователей, которые имеют доступ или участвуют
            в данной брони
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный формат запроса или отсутствует обязательный параметр
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не авторизован для просмотра участников брони
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Бронирование с указанным ID не найдено
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера при обработке запроса
      security:
      - bearerauth: []
      summary: Получить список пользователей, участвующих в бронировании
      tags:
      - reservations
  /reservations/{reservation_id}/users/invite:
    post:
      operationId: inviteUsersToReservation
      parameters:
      - description: ID бронирования, в которое приглашаются пользователи
        in: path
        name: reservation_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteRequest'
        description: Данные с идентификаторами пользователей для приглашения
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: ""
          description: Пользователи успешно приглашены
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный формат запроса или отсутствуют обязательные данные
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не авторизован или не имеет прав доступа
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Бронирование с указанным ID не найдено
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Пригласить одного или нескольких пользователей присоединиться к коллективной
        броне
      tags:
      - reservations
  /reservations/invites:
    get:
      operationId: getUserReservationInvites
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReservationInvite'
                type: array
          description: Список приглашений
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Получить список приглашений для пользователя
      tags:
      - reservations
  /reservations/invites/{invite_id}/accept:
    post:
      operationId: acceptReservationInvite
      parameters:
      - description: ID приглашения
        in: path
        name: invite_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Приглашение принято
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Принять приглашение на бронь
      tags:
      - reservations
  /reservations/invites/{invite_id}/decline:
    post:
      operationId: declineReservationInvite
      parameters:
      - description: ID приглашения
        in: path
        name: invite_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Приглашение отклонено
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Отклонить приглашение на бронь
      tags:
      - reservations
  /users/{username}:
    get:
      description: Возвращает публичную информацию профиля пользователя по его username.
        Доступно без авторизации.
      operationId: getUserProfile
      parameters:
      - description: Уникальное имя пользователя (username)
        in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: Публичный профиль пользователя успешно получен
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      summary: Получить публичный профиль пользователя
      tags:
      - users
  /wishlists:
    get:
      operationId: getWishlists
      parameters:
      - description: ID пользователя
        in: query
        name: user
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page-Wishlist'
          description: Список вишлистов пользователя
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Не авторизован
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Получить список вишлистов пользователя
      tags:
      - wishlists
    post:
      operationId: createWishlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWishlistRequest'
        description: Запрос создания вишлиста
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wishlist'
          description: Вишлист создан
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Не авторизован
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Создать вишлист
      tags:
      - wishlists
  /wishlists/{wishlist_id}:
    delete:
      operationId: deleteWishlist
      parameters:
      - description: ID вишлиста
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Вишлист удален
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Нет прав на удаление ресурса
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Ресурс не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Удалить вишлист пользователя
      tags:
      - wishlists
    get:
      operationId: getWishlist
      parameters:
      - description: ID вишлиста
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wishlist'
          description: Вишлист
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Не авторизован
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Ресурс не найден
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Получить вишлист по идентификатору
      tags:
      - wishlists
    put:
      operationId: updateWishlist
      parameters:
      - description: ID вишлиста
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWishlistRequest'
        description: Запрос обновления вишлиста
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wishlist'
          description: Вишлист обновлен
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Не авторизован
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Нет прав на обновление ресурса
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Ресурс не найден
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Обновить вишлист
      tags:
      - wishlists
  /wishlists/{wishlist_id}/items:
    post:
      operationId: createWishlistItem
      parameters:
      - description: ID вишлиста
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWishlistItemRequest'
        description: Запрос создания предмета
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WishlistItem'
          description: Предмет добавлен
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Вишлист не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Добавить предмет в вишлист
      tags:
      - wishlists
  /wishlists/{wishlist_id}/items/{item_id}:
    delete:
      operationId: deleteWishlistItem
      parameters:
      - description: ID вишлиста
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      - description: ID предмета
        in: path
        name: item_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Предмет удален
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Нет прав на удаление предмета
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Вишлист или предмет не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Удалить предмет вишлиста
      tags:
      - wishlists
    put:
      operationId: updateWishlistItem
      parameters:
      - description: ID вишлиста
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      - description: ID предмета
        in: path
        name: item_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWishlistItemRequest'
        description: Запрос обновления предмета
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WishlistItem'
          description: Предмет обновлен
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Вишлист или предмет не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка
      security:
      - bearerauth: []
      summary: Обновить предмет вишлиста
      tags:
      - wishlists
  /wishlists/{wishlist_id}/items/{item_id}/photo:
    delete:
      operationId: deleteWishlistItemPhoto
      parameters:
      - description: ID вишлиста
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      - description: ID предмета
        in: path
        name: item_id
        required: true
        schema:
          type: integer
      responses:
        "204":
          content:
            application/json:
              schema:
                type: ""
          description: Изображение предмета вишлиста удалено
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Некорректный запрос
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неавторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Доступ запрещён (нет прав)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Предмет вишлиста не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Удалить изображение предмета вишлиста
      tags:
      - wishlists
    post:
      operationId: updateWishlistItemPhoto
      parameters:
      - description: ID вишлиста
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      - description: ID предмета
        in: path
        name: item_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateItemPhotoRequest'
        description: Фото предмета
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPhoto'
          description: Относительный путь до изображения предмета
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Некорректный запрос (например, файл не передан или формат неверный)
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неавторизован
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Доступ запрещён (нет прав)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Предмет вишлиста не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Обновить изображение предмета вишлиста
      tags:
      - wishlists
  /wishlists/{wishlist_id}/items/{item_id}/reservations:
    post:
      description: Позволяет авторизованному пользователю забронировать конкретный
        предмет из указанного вишлиста.
      operationId: reserveWishlistItem
      parameters:
      - description: ID вишлиста, к которому принадлежит предмет
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      - description: ID предмета, который нужно забронировать
        in: path
        name: item_id
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: Созданное бронирование с деталями
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос — например, неверные параметры
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован — требуется токен авторизации
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Вишлист или предмет с указанными ID не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Создать бронь предмета вишлиста
      tags:
      - reservations
  /wishlists/{wishlist_id}/reservations:
    get:
      description: Возвращает список всех бронирований предметов, принадлежащих указанному
        вишлисту.
      operationId: getWishlistReservations
      parameters:
      - description: ID вишлиста, для которого запрашиваются бронирования
        in: path
        name: wishlist_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Reservation'
                type: array
          description: Список бронирований по вишлисту
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверный запрос — например, неверный ID
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Не авторизован — требуется токен авторизации
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Вишлист не найден
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Внутренняя ошибка сервера
      security:
      - bearerauth: []
      summary: Получить список бронирований для вишлиста
      tags:
      - reservations
servers:
- url: https://85.198.80.148/api/v1
